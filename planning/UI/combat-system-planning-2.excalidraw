{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "type": "text",
      "version": 989,
      "versionNonce": 1846534115,
      "isDeleted": false,
      "id": "-DXiTcYEYzYvx9fQRAD4R",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1389.359375,
      "y": -3406.1775970458984,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 3961.453125,
      "height": 1738.6502441406246,
      "seed": 1506056194,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715532128885,
      "link": null,
      "locked": false,
      "fontSize": 120.73960028754338,
      "fontFamily": 3,
      "text": "I'm not satisfied with the last plan I came up with.\nI think it focused too much on the interactions\nbetween different components/classes, and not enough\non how the individual components and classes would\nactually work. So for this plan, I'll figure out how\neach component will work and then implement \nsaid components independent of eachother. I won't worry\nabout props or interactions at all in this step;\neverything the components need will be hard coded for\nnow, and then when everything works in isolation, that's\nwhen I'll plan out how to make the components interact,\nprovide important data, etc.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "I'm not satisfied with the last plan I came up with.\nI think it focused too much on the interactions\nbetween different components/classes, and not enough\non how the individual components and classes would\nactually work. So for this plan, I'll figure out how\neach component will work and then implement \nsaid components independent of eachother. I won't worry\nabout props or interactions at all in this step;\neverything the components need will be hard coded for\nnow, and then when everything works in isolation, that's\nwhen I'll plan out how to make the components interact,\nprovide important data, etc.",
      "lineHeight": 1.2,
      "baseline": 1710
    },
    {
      "type": "rectangle",
      "version": 189,
      "versionNonce": 2020852653,
      "isDeleted": false,
      "id": "ur80RaByGKxLwVlaCgGsg",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1954.562495676686,
      "y": 775.9328384418632,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 44330242,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "xSeHYsBMMqbU8A2QLzgvN"
        }
      ],
      "updated": 1715533423475,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 529,
      "versionNonce": 1108887597,
      "isDeleted": false,
      "id": "xSeHYsBMMqbU8A2QLzgvN",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1942.1354025778776,
      "y": 887.5884633164685,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 431.99999999999994,
      "seed": 1961318146,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715533428864,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "ActionButton\n\nActionButton needs to register when the\nplayer clicks on it and accurately be \nable to tell other components what \naction was selected.\n\nAlso, it needs to provide a means to \ndetermine what direction the action \nshould take place in.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "ur80RaByGKxLwVlaCgGsg",
      "originalText": "ActionButton\n\nActionButton needs to register when the player clicks on it and accurately be able to tell other components what action was selected.\n\nAlso, it needs to provide a means to determine what direction the action should take place in.",
      "lineHeight": 1.2,
      "baseline": 423
    },
    {
      "type": "rectangle",
      "version": 244,
      "versionNonce": 2139384734,
      "isDeleted": false,
      "id": "G9x6xAyradCyIWpgqSD3W",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1947.0859846406556,
      "y": 1530.3542959972278,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1582390786,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "A1yNrPUqenGundMEUke8C"
        }
      ],
      "updated": 1715383122461,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 490,
      "versionNonce": 1574940482,
      "isDeleted": false,
      "id": "A1yNrPUqenGundMEUke8C",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1934.6588915418472,
      "y": 1598.8099208718331,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 518.4,
      "seed": 1887238942,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715387099680,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "CombatParent\n\nCombatParent will handle any global \ncombat data. So, I think maybe it \nshould keep and update a representation\nof the combat encounter. The map, \nenemies, hazards, player, turn count, \nwhose turn is it, etc. So maybe I \nshould wait until everything else is \nfleshed out to determine for certain \nwhat data this CombatRepresentation \nobject should have.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "G9x6xAyradCyIWpgqSD3W",
      "originalText": "CombatParent\n\nCombatParent will handle any global combat data. So, I think maybe it should keep and update a representation of the combat encounter. The map, enemies, hazards, player, turn count, whose turn is it, etc. So maybe I should wait until everything else is fleshed out to determine for certain what data this CombatRepresentation object should have.",
      "lineHeight": 1.2,
      "baseline": 512
    },
    {
      "type": "rectangle",
      "version": 301,
      "versionNonce": 1097943006,
      "isDeleted": false,
      "id": "0IsfuHlejU4Fgo0o8Yv3T",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1935.558425438695,
      "y": 2268.69307327759,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 934549214,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "oUGJXCtthjH57fF6Z4I37"
        }
      ],
      "updated": 1715383122461,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 432,
      "versionNonce": 2060098498,
      "isDeleted": false,
      "id": "oUGJXCtthjH57fF6Z4I37",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1923.1313323398865,
      "y": 2445.1486981521953,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 302.4,
      "seed": 1583599106,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715402724939,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "EnemiesDisplay\n\nGiven a list of enemy data, display the\nsymbol and health of all of the \nenemies. When hovering over the enemy \nentry, display a card that has the \nenemy's name and its other stats.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "0IsfuHlejU4Fgo0o8Yv3T",
      "originalText": "EnemiesDisplay\n\nGiven a list of enemy data, display the symbol and health of all of the enemies. When hovering over the enemy entry, display a card that has the enemy's name and its other stats.",
      "lineHeight": 1.2,
      "baseline": 296
    },
    {
      "type": "rectangle",
      "version": 345,
      "versionNonce": 1472152286,
      "isDeleted": false,
      "id": "9_nQ10VIWK3KoY0y6hEQg",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1934.8924544004938,
      "y": 2974.4463954883727,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1675935618,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "fGMDTVoCfAxqSHKLaAxjP"
        }
      ],
      "updated": 1715383127256,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 341,
      "versionNonce": 1779070430,
      "isDeleted": false,
      "id": "fGMDTVoCfAxqSHKLaAxjP",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1922.4653613016853,
      "y": 3129.302020362978,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 345.59999999999997,
      "seed": 1231712670,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715407445434,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "TurnDisplay\n\nGiven turn data, displays whose turn it\nis.\n\nWhen everything gets connected, \nhovering will highlight the current \nturn taker.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "9_nQ10VIWK3KoY0y6hEQg",
      "originalText": "TurnDisplay\n\nGiven turn data, displays whose turn it is.\n\nWhen everything gets connected, hovering will highlight the current turn taker.",
      "lineHeight": 1.2,
      "baseline": 339
    },
    {
      "type": "rectangle",
      "version": 255,
      "versionNonce": 272014338,
      "isDeleted": false,
      "id": "T1ppHyqG5xWezh_0vXvYy",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1043.1299463038436,
      "y": 779.2497762755738,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1991792194,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "Yv3mOEXDTZHoYxaZIQlOU"
        }
      ],
      "updated": 1715383122462,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 286,
      "versionNonce": 1982805634,
      "isDeleted": false,
      "id": "Yv3mOEXDTZHoYxaZIQlOU",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1030.7028532050351,
      "y": 977.3054011501791,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 259.2,
      "seed": 932724226,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715385790626,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "ActionsDisplay\n\nNeeds to use a list of actions that the\nplayer has to generate ActionButtons. \nIn isolation, just output buttons that \nhave the same names as the actions.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "T1ppHyqG5xWezh_0vXvYy",
      "originalText": "ActionsDisplay\n\nNeeds to use a list of actions that the player has to generate ActionButtons. In isolation, just output buttons that have the same names as the actions.",
      "lineHeight": 1.2,
      "baseline": 252
    },
    {
      "type": "rectangle",
      "version": 314,
      "versionNonce": 576954206,
      "isDeleted": false,
      "id": "OUmSxHwwpY2ctCwtEU4HZ",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1037.0334401506257,
      "y": 1533.8811947684385,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1119046558,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "wFVAe7TRTAlixvs8J59q2"
        }
      ],
      "updated": 1715402210263,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 474,
      "versionNonce": 1588530562,
      "isDeleted": false,
      "id": "wFVAe7TRTAlixvs8J59q2",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1024.6063470518172,
      "y": 1645.5368196430438,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 431.99999999999994,
      "seed": 1840203074,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715402210264,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "ComboEntry\n\nDisplays the name and, if applicable, \ndirection of the action that the entry \nis associated with.\n\nIn the preliminary step, this can be \nhandled directly by ComboSection, so \nI'll save working on this for the \nrefactoring step.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "OUmSxHwwpY2ctCwtEU4HZ",
      "originalText": "ComboEntry\n\nDisplays the name and, if applicable, direction of the action that the entry is associated with.\n\nIn the preliminary step, this can be handled directly by ComboSection, so I'll save working on this for the refactoring step.",
      "lineHeight": 1.2,
      "baseline": 425
    },
    {
      "type": "rectangle",
      "version": 368,
      "versionNonce": 656212866,
      "isDeleted": false,
      "id": "veL7OW14-pe8Fowc4Wyoi",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1025.505880948665,
      "y": 2272.2199720488006,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 84511518,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "bBha4ExwbAzuesGf6TLUh"
        }
      ],
      "updated": 1715383122463,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 419,
      "versionNonce": 1548029250,
      "isDeleted": false,
      "id": "bBha4ExwbAzuesGf6TLUh",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1013.0787878498566,
      "y": 2448.675596923406,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 302.4,
      "seed": 1384037826,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715403616118,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "HazardsDisplay\n\nGiven a list of hazard data, display an\nentry that has the hazard's symbol and \nhp, if applicable. Hoveering should \nshow a card that has teh hazard's name,\nhp, and effects on it.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "veL7OW14-pe8Fowc4Wyoi",
      "originalText": "HazardsDisplay\n\nGiven a list of hazard data, display an entry that has the hazard's symbol and hp, if applicable. Hoveering should show a card that has teh hazard's name, hp, and effects on it.",
      "lineHeight": 1.2,
      "baseline": 296
    },
    {
      "type": "rectangle",
      "version": 440,
      "versionNonce": 922948941,
      "isDeleted": false,
      "id": "q7Y9QvQKJ02m8mtuW6an7",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -134.34604343583499,
      "y": -113.21651233145303,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 1586.3100128173828,
      "seed": 788192222,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "aeIMOvw1BJAvjCTdh6jbA"
        }
      ],
      "updated": 1715589991193,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1455,
      "versionNonce": 904717229,
      "isDeleted": false,
      "id": "aeIMOvw1BJAvjCTdh6jbA",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -121.91895033702656,
      "y": -54.4615059227616,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 1468.8,
      "seed": 2006440194,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715589991193,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "CombatMap\n\nNeeds to use a 2D array of location \ndata to render the map.\n\nIn isolation, just render the symbol \nassociated with the location. Also, the\narray, and the LocationData class, will\njust be declared in the CombatMap. \nLater, these things will be refactored \nout/passed in by other \ncomponents/classes.\n\nA couple more things:\n- it needs to be able to highlight \nAOE's.\n- it needs to be able to highlight \nspecific things in the environment, \nlike enemies, hazards, the player, etc.\n\nNOTES: I spent a lot of time building \nup a fairly robust AOE system, and I \ndon't think I should have. Part of the \nchallenge of this game will be \nvisualizing how your combo will play \nout. That gets exponentially harder \nwhen you have semi realistic AOE's that\nare occluded by walls and such. And \neven in my own imagination, I imagine \npretty much all of the abilities \nworking in straight lines. So yeah, \nkeep that in mind in the future. Try \nnot to devote time to systems/mechanics\nthat probably aren't going to get used.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "q7Y9QvQKJ02m8mtuW6an7",
      "originalText": "CombatMap\n\nNeeds to use a 2D array of location data to render the map.\n\nIn isolation, just render the symbol associated with the location. Also, the array, and the LocationData class, will just be declared in the CombatMap. Later, these things will be refactored out/passed in by other components/classes.\n\nA couple more things:\n- it needs to be able to highlight AOE's.\n- it needs to be able to highlight specific things in the environment, like enemies, hazards, the player, etc.\n\nNOTES: I spent a lot of time building up a fairly robust AOE system, and I don't think I should have. Part of the challenge of this game will be visualizing how your combo will play out. That gets exponentially harder when you have semi realistic AOE's that are occluded by walls and such. And even in my own imagination, I imagine pretty much all of the abilities working in straight lines. So yeah, keep that in mind in the future. Try not to devote time to systems/mechanics that probably aren't going to get used.",
      "lineHeight": 1.2,
      "baseline": 1460
    },
    {
      "type": "rectangle",
      "version": 372,
      "versionNonce": 593049474,
      "isDeleted": false,
      "id": "RzN9awiGD__k6DtqrFt4j",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -137.00960808339823,
      "y": 1540.030277463295,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 2076452830,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "pycov-IO--o-w_X4TamTa"
        }
      ],
      "updated": 1715401966857,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 300,
      "versionNonce": 301883906,
      "isDeleted": false,
      "id": "pycov-IO--o-w_X4TamTa",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -92.9418899845898,
      "y": 1759.6859023379004,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 759.375,
      "height": 215.99999999999997,
      "seed": 802770178,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715401983484,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "CombosList\n\nHonestly don't think I'll use this. \nWe'll see at the refactoring step I \nguess.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "RzN9awiGD__k6DtqrFt4j",
      "originalText": "CombosList\n\nHonestly don't think I'll use this. We'll see at the refactoring step I guess.",
      "lineHeight": 1.2,
      "baseline": 209
    },
    {
      "type": "rectangle",
      "version": 428,
      "versionNonce": 1540020930,
      "isDeleted": false,
      "id": "iYqacjNLq6kooDZU_m5Ox",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -125.48204888143755,
      "y": 2278.369054743657,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 673609566,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "ZOUXoLlOpTTqyVWE2CptQ"
        }
      ],
      "updated": 1715383122463,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 385,
      "versionNonce": 1333607902,
      "isDeleted": false,
      "id": "ZOUXoLlOpTTqyVWE2CptQ",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -113.05495578262912,
      "y": 2498.024679618263,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 215.99999999999997,
      "seed": 757446018,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715405686696,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "HPDisplay\n\nGiven some hp data, display said hp. \nMake sure that when the hp is changed, \nthe display rerenders it.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "iYqacjNLq6kooDZU_m5Ox",
      "originalText": "HPDisplay\n\nGiven some hp data, display said hp. Make sure that when the hp is changed, the display rerenders it.",
      "lineHeight": 1.2,
      "baseline": 209
    },
    {
      "type": "rectangle",
      "version": 425,
      "versionNonce": 2041904386,
      "isDeleted": false,
      "id": "_YeQhwUo9hl4DZZe08OML",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 758.3813316227584,
      "y": 797.0176475724938,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1634635870,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "jGlFuSa_Z7vkp0Fc7y_UQ"
        }
      ],
      "updated": 1715386311253,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 736,
      "versionNonce": 1709624350,
      "isDeleted": false,
      "id": "jGlFuSa_Z7vkp0Fc7y_UQ",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 770.8084247215668,
      "y": 908.6732724470992,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 431.99999999999994,
      "seed": 516402306,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715386311253,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "CombatMapLocation\n\nJust displays and formats a symbol \ncorresponding to location data that was\npassed in. That data may just be the \nsymbol to display.\n\nIn isolation, just copy paste a few of \nthese into a CombatMapRow and make sure\nthe formatting looks good.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "_YeQhwUo9hl4DZZe08OML",
      "originalText": "CombatMapLocation\n\nJust displays and formats a symbol corresponding to location data that was passed in. That data may just be the symbol to display.\n\nIn isolation, just copy paste a few of these into a CombatMapRow and make sure the formatting looks good.",
      "lineHeight": 1.2,
      "baseline": 425
    },
    {
      "type": "rectangle",
      "version": 433,
      "versionNonce": 4231746,
      "isDeleted": false,
      "id": "G9RyvkkvLFCBF_P2u_uJ2",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 767.9441377311609,
      "y": 1541.2503865761773,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1324317726,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "goOJkSSbT5DPGXaUXn9Al"
        }
      ],
      "updated": 1715383122464,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 741,
      "versionNonce": 587807234,
      "isDeleted": false,
      "id": "goOJkSSbT5DPGXaUXn9Al",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 780.3712308299694,
      "y": 1609.7060114507826,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 518.4,
      "seed": 1995201730,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715402450356,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "ComboSection\n\nDisplays a list of Actions as \nComboEntries, as well as buttons to \nconfirm or cancel a combo. Both should \n\"work\" in this preliminary step. Just \nclear the list for cancel, and call \nsome sort of Execute() function on all \nof the actions for the confirm option. \nThese executions should not happen all \nat once, there should be a delay \nbetween them.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "G9RyvkkvLFCBF_P2u_uJ2",
      "originalText": "ComboSection\n\nDisplays a list of Actions as ComboEntries, as well as buttons to confirm or cancel a combo. Both should \"work\" in this preliminary step. Just clear the list for cancel, and call some sort of Execute() function on all of the actions for the confirm option. These executions should not happen all at once, there should be a delay between them.",
      "lineHeight": 1.2,
      "baseline": 512
    },
    {
      "type": "rectangle",
      "version": 491,
      "versionNonce": 200064834,
      "isDeleted": false,
      "id": "dIhcUnXK-yHSB1zuwImW1",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 779.4716969331216,
      "y": 2279.5891638565395,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1767627678,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "TW6LZFVK9HtOzAT2BzmJL"
        }
      ],
      "updated": 1715405817500,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 390,
      "versionNonce": 95636958,
      "isDeleted": false,
      "id": "TW6LZFVK9HtOzAT2BzmJL",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 791.89879003193,
      "y": 2520.844788731145,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 172.79999999999998,
      "seed": 1335342402,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715405817500,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "LootDisplay\n\nThis is really mroe of an event thing. \nI might move this.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "dIhcUnXK-yHSB1zuwImW1",
      "originalText": "LootDisplay\n\nThis is really mroe of an event thing. I might move this.",
      "lineHeight": 1.2,
      "baseline": 166
    },
    {
      "type": "rectangle",
      "version": 458,
      "versionNonce": 1593243010,
      "isDeleted": false,
      "id": "9R14IHelG4kuEHxlxi9hk",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1656.94280345165,
      "y": 787.8384504192904,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1103390302,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "5rjkiScY5dzk0itpGRRii"
        }
      ],
      "updated": 1715386308505,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 690,
      "versionNonce": 1748933534,
      "isDeleted": false,
      "id": "5rjkiScY5dzk0itpGRRii",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1669.3698965504584,
      "y": 877.8940752938959,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 822.65625,
      "height": 475.19999999999993,
      "seed": 2011313794,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715386308505,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "CombatMapRow\n\nDisplays and formats an array of \nLocationData.\n\nThis can just be a refactoring of \nCombatMap probably. Pulling out the \ncode that actually translates location \ndata to CombatMapLocations. So don't do\nanything with this until the \nrefactoring step.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "9R14IHelG4kuEHxlxi9hk",
      "originalText": "CombatMapRow\n\nDisplays and formats an array of LocationData.\n\nThis can just be a refactoring of CombatMap probably. Pulling out the code that actually translates location data to CombatMapLocations. So don't do anything with this until the refactoring step.",
      "lineHeight": 1.2,
      "baseline": 468
    },
    {
      "type": "rectangle",
      "version": 513,
      "versionNonce": 1629479298,
      "isDeleted": false,
      "id": "fx3QjL4gZc1Vt6wi7r5el",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1663.0393096048679,
      "y": 1542.469868912155,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 36063326,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "iO4qWafKl7ozavSjJdKJV"
        }
      ],
      "updated": 1715383122464,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 504,
      "versionNonce": 320459970,
      "isDeleted": false,
      "id": "iO4qWafKl7ozavSjJdKJV",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1717.6539027036763,
      "y": 1762.1254937867604,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 738.28125,
      "height": 215.99999999999997,
      "seed": 1351054466,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715402540555,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "ComponentSwitcher\n\nThe switcher should switch between \nscreens in a list when the arrow \nbuttons are pressed.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "fx3QjL4gZc1Vt6wi7r5el",
      "originalText": "ComponentSwitcher\n\nThe switcher should switch between screens in a list when the arrow buttons are pressed.",
      "lineHeight": 1.2,
      "baseline": 209
    },
    {
      "type": "rectangle",
      "version": 571,
      "versionNonce": 1389052354,
      "isDeleted": false,
      "id": "UaofsqWan8Ewq8iXYRrrD",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1674.5668688068286,
      "y": 2280.8086461925172,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 847.5104361976169,
      "height": 655.3112497492107,
      "seed": 1591392222,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "lcsO4IXU3d6G0qPVF6mKF"
        }
      ],
      "updated": 1715402271118,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 429,
      "versionNonce": 64238430,
      "isDeleted": false,
      "id": "lcsO4IXU3d6G0qPVF6mKF",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1940.118961905637,
      "y": 2543.6642710671226,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 316.40625,
      "height": 129.6,
      "seed": 456375554,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1715402271118,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 3,
      "text": "Overlay\n\nNo work needed.",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "UaofsqWan8Ewq8iXYRrrD",
      "originalText": "Overlay\n\nNo work needed.",
      "lineHeight": 1.2,
      "baseline": 123
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}